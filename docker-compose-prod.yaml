services:
  sploder-revival:
    build:
      context: .
      dockerfile: Dockerfile
    image: sploder-revival
    container_name: sploder_revival_prod
    ports:
     - "127.0.0.1:8020:80"
    depends_on:
     - "db"
    volumes:
      # Production volumes - only expose specific writable directories
      - ./src/users:/var/www/html/users:rw
      - ./src/avatar/a:/var/www/html/avatar/a:rw
      - ./src/cache:/var/www/html/cache:rw
      - ./src/config/currentcontest.txt:/var/www/html/config/currentcontest.txt:rw
      - ./src/database/originalmembers.db:/var/www/html/database/originalmembers.db:rw
      - ./src/graphics/gif:/var/www/html/graphics/gif:rw
      - ./src/graphics/png:/var/www/html/graphics/png:rw
      - ./src/graphics/prj:/var/www/html/graphics/prj:rw
      - ./src/legal:/var/www/html/legal:rw
      - ./src/update/uploads:/var/www/html/update/uploads:rw
      - ./src/update/currentversion.txt:/var/www/html/update/currentversion.txt:rw
      - ./src/php/verifyscore.php:/var/www/html/php/verifyscore.php:rw
    environment:
      PHP_ENVIRONMENT: production
      DOMAIN_NAME: ${DOMAIN_NAME}
      # Is this website public via a network?
      # If you are running this PRIVATELY, set this to false
      NETWORKED: ${NETWORKED}

      # If yes, you must provide the source code to comply with the AGPL-3.0 license
      # If you do not provide the source code, you are in violation of the AGPL-3.0 license
      REPOSITORY: ${REPOSITORY}

      # Link to your forum
      FORUMS_URL: ${FORUMS_URL}

      # Your Discord username, where you can be reached
      # This username will be shown in the privacy policy and other pages
      DISCORD_USERNAME: ${DISCORD_USERNAME}

      # Your email, where you can be reached
      # This email will be shown in the privacy policy and other pages
      EMAIL: ${EMAIL}

      # DO NOT INCLUDE THE 'https://discord.gg/' PART
      # DO NOT INCLUDE THE 'https://discord.com/invite/' PART
      # example: cHGz362sdC
      DISCORD_INVITE: ${DISCORD_INVITE}
      LAUNCHER_REPOSITORY_URL: ${LAUNCHER_REPOSITORY_URL}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSLMODE: ${POSTGRES_SSLMODE}
      ORIGINAL_MEMBERS_DB: ${ORIGINAL_MEMBERS_DB}
      CF_TURNSTILE_SECRET_KEY: ${CF_TURNSTILE_SECRET_KEY}
      CF_TURNSTILE_SITE_KEY: ${CF_TURNSTILE_SITE_KEY}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_SECRET_ID: ${DISCORD_SECRET_ID}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      UPLOAD_API_KEY: ${UPLOAD_API_KEY}
      CENSORED_WORDS: ${CENSORED_WORDS}
    restart: unless-stopped

  db:
    image: postgres:17
    container_name: sploder_postgres_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db:/bootstrap  # Mount the backup file into the container
      - postgres_data:/var/lib/postgresql/data  # Persistent storage for the database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sploder -d sploder"]
      interval: 30s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
